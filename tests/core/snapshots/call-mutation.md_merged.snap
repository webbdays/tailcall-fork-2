---
source: tests/core/spec.rs
expression: formatter
---
schema @server @upstream(baseURL: "http://jsonplaceholder.typicode.com") {
  query: Query
  mutation: Mutation
}

input PostInput {
  body: String
  title: String
  userId: Int
}

input PostInputWithoutUserId {
  body: String
  title: String
  userId: Int
}

type Mutation {
  attachPostToFirstUser(postId: Int!): User
    @call(steps: [{mutation: "attachPostToUser", args: {postId: "{{.args.postId}}", userId: 1}}])
  attachPostToUser(postId: Int!, userId: Int!): User
    @http(body: "{\"postId\":{{.args.postId}}}", method: "PATCH", path: "/users/{{.args.userId}}")
  insertMockedPost: Post
    @call(steps: [{mutation: "insertPost", args: {input: {body: "post-body", title: "post-title", userId: 1}}}])
  insertPost(input: PostInput): Post @http(body: "{{.args.input}}", method: "POST", path: "/posts")
  insertPostToFirstUser(input: PostInputWithoutUserId): Post
    @call(steps: [{mutation: "insertPostToUser", args: {input: "{{.args.input}}", userId: 1}}])
  insertPostToUser(input: PostInputWithoutUserId!, userId: Int!): Post
    @http(body: "{{.args.input}}", method: "POST", path: "/users/{{.args.userId}}/posts")
}

type Post {
  body: String
  id: Int
  title: String
  userId: Int
}

type Query {
  firstUser: User @http(path: "/users/1")
  postFromUser(userId: Int!): Post @http(path: "/posts?userId={{.args.userId}}")
}

type User {
  id: Int
  name: String
  posts: [Post] @call(steps: [{query: "postFromUser", args: {userId: "{{.value.id}}"}}])
}
