---
source: tests/core/spec.rs
expression: formatted
---
scalar Bytes

scalar Date

scalar DateTime

scalar Email

scalar Empty

scalar Int128

scalar Int16

scalar Int32

scalar Int64

scalar Int8

scalar JSON

scalar PhoneNumber

type Query {
  oneof__OneOfService__GetOneOfVar0(request: oneof__Request__Var0__Var!): oneof__Response!
  oneof__OneOfService__GetOneOfVar1(request: oneof__Request__Var0__Var0!): oneof__Response!
  oneof__OneOfService__GetOneOfVar2(request: oneof__Request__Var0__Var1!): oneof__Response!
  oneof__OneOfService__GetOneOfVar3(request: oneof__Request__Var1__Var!): oneof__Response!
  oneof__OneOfService__GetOneOfVar4(request: oneof__Request__Var1__Var0!): oneof__Response!
  oneof__OneOfService__GetOneOfVar5(request: oneof__Request__Var1__Var1!): oneof__Response!
  oneof__OneOfService__GetOneOfVar6(request: oneof__Request__Var__Var!): oneof__Response!
  oneof__OneOfService__GetOneOfVar7(request: oneof__Request__Var__Var0!): oneof__Response!
  oneof__OneOfService__GetOneOfVar8(request: oneof__Request__Var__Var1!): oneof__Response!
}

scalar UInt128

scalar UInt16

scalar UInt32

scalar UInt64

scalar UInt8

scalar Url

type oneof__Command {
  command: String
}

input oneof__CommandInput {
  command: String
}

type oneof__Payload {
  payload: String
}

input oneof__PayloadInput {
  payload: String
}

input oneof__Request__Var0__Var {
  payload: oneof__PayloadInput!
  usual: String
}

input oneof__Request__Var0__Var0 {
  flag: Boolean!
  payload: oneof__PayloadInput!
  usual: String
}

input oneof__Request__Var0__Var1 {
  optPayload: oneof__PayloadInput!
  payload: oneof__PayloadInput!
  usual: String
}

input oneof__Request__Var1__Var {
  command: oneof__CommandInput!
  usual: String
}

input oneof__Request__Var1__Var0 {
  command: oneof__CommandInput!
  flag: Boolean!
  usual: String
}

input oneof__Request__Var1__Var1 {
  command: oneof__CommandInput!
  optPayload: oneof__PayloadInput!
  usual: String
}

input oneof__Request__Var__Var {
  usual: String
}

input oneof__Request__Var__Var0 {
  flag: Boolean!
  usual: String
}

input oneof__Request__Var__Var1 {
  optPayload: oneof__PayloadInput!
  usual: String
}

union oneof__Response = oneof__Response__Var | oneof__Response__Var0 | oneof__Response__Var1 | oneof__Response__Var2

type oneof__Response__Var {
  usual: Int
}

type oneof__Response__Var0 {
  payload: oneof__Payload!
  usual: Int
}

type oneof__Response__Var1 {
  command: oneof__Command!
  usual: Int
}

type oneof__Response__Var2 {
  response: String!
  usual: Int
}

schema {
  query: Query
}
