---
source: tests/core/spec.rs
expression: formatter
---
schema
  @server(port: 8000)
  @upstream(baseURL: "http://localhost:50051", batch: {delay: 10, headers: []}, httpCache: 42)
  @link(src: "oneof.proto", type: Protobuf) {
  query: Query
}

input oneof__CommandInput {
  command: String
}

input oneof__PayloadInput {
  payload: String
}

input oneof__Request__Var0__Var {
  payload: oneof__PayloadInput!
  usual: String
}

input oneof__Request__Var0__Var0 {
  flag: Boolean!
  payload: oneof__PayloadInput!
  usual: String
}

input oneof__Request__Var0__Var1 {
  optPayload: oneof__PayloadInput!
  payload: oneof__PayloadInput!
  usual: String
}

input oneof__Request__Var1__Var {
  command: oneof__CommandInput!
  usual: String
}

input oneof__Request__Var1__Var0 {
  command: oneof__CommandInput!
  flag: Boolean!
  usual: String
}

input oneof__Request__Var1__Var1 {
  command: oneof__CommandInput!
  optPayload: oneof__PayloadInput!
  usual: String
}

input oneof__Request__Var__Var {
  usual: String
}

input oneof__Request__Var__Var0 {
  flag: Boolean!
  usual: String
}

input oneof__Request__Var__Var1 {
  optPayload: oneof__PayloadInput!
  usual: String
}

union oneof__Response = oneof__Response__Var | oneof__Response__Var0 | oneof__Response__Var1 | oneof__Response__Var2

type Query {
  oneof__OneOfService__GetOneOfVar0(request: oneof__Request__Var0__Var!): oneof__Response!
    @grpc(body: "{{.args.request}}", method: "oneof.OneOfService.GetOneOf")
  oneof__OneOfService__GetOneOfVar1(request: oneof__Request__Var0__Var0!): oneof__Response!
    @grpc(body: "{{.args.request}}", method: "oneof.OneOfService.GetOneOf")
  oneof__OneOfService__GetOneOfVar2(request: oneof__Request__Var0__Var1!): oneof__Response!
    @grpc(body: "{{.args.request}}", method: "oneof.OneOfService.GetOneOf")
  oneof__OneOfService__GetOneOfVar3(request: oneof__Request__Var1__Var!): oneof__Response!
    @grpc(body: "{{.args.request}}", method: "oneof.OneOfService.GetOneOf")
  oneof__OneOfService__GetOneOfVar4(request: oneof__Request__Var1__Var0!): oneof__Response!
    @grpc(body: "{{.args.request}}", method: "oneof.OneOfService.GetOneOf")
  oneof__OneOfService__GetOneOfVar5(request: oneof__Request__Var1__Var1!): oneof__Response!
    @grpc(body: "{{.args.request}}", method: "oneof.OneOfService.GetOneOf")
  oneof__OneOfService__GetOneOfVar6(request: oneof__Request__Var__Var!): oneof__Response!
    @grpc(body: "{{.args.request}}", method: "oneof.OneOfService.GetOneOf")
  oneof__OneOfService__GetOneOfVar7(request: oneof__Request__Var__Var0!): oneof__Response!
    @grpc(body: "{{.args.request}}", method: "oneof.OneOfService.GetOneOf")
  oneof__OneOfService__GetOneOfVar8(request: oneof__Request__Var__Var1!): oneof__Response!
    @grpc(body: "{{.args.request}}", method: "oneof.OneOfService.GetOneOf")
}

type oneof__Command @tag(id: "oneof.Command") {
  command: String
}

type oneof__Payload @tag(id: "oneof.Payload") {
  payload: String
}

type oneof__Response__Var @tag(id: "oneof.Response") {
  usual: Int
}

type oneof__Response__Var0 @tag(id: "oneof.Response") {
  payload: oneof__Payload!
  usual: Int
}

type oneof__Response__Var1 @tag(id: "oneof.Response") {
  command: oneof__Command!
  usual: Int
}

type oneof__Response__Var2 @tag(id: "oneof.Response") {
  response: String!
  usual: Int
}
