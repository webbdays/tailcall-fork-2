schema
  @server(port: 8000, hostname: "0.0.0.0")
  @upstream(baseURL: "http://jsonplaceholder.typicode.com", httpCache: 42) {
  query: Query
}

type Query {
  posts: [Post] @http(path: "/posts?_limit=11")
  users: [User] @http(path: "/users")
  user(id: Int!): User @http(path: "/users/{{.args.id}}")
  post(id: Int! = 1): Post @http(path: "/posts/{{.args.id}}")
}

type User {
  id: Int!
  name: String!
  username: String!
  email: String!
  phone: String
  blog: String @expr(body: "https://test.blog/users/website/{{.value.username}}")
  albums: [Album] @http(path: "/users/{{.value.id}}/albums?_limit=2")
}

type Post {
  id: Int!
  userId: Int!
  title: String!
  body: String!
  user: User @http(path: "/users/{{.value.userId}}")
  users: [User] @http(path: "/users")
  comments: [Comment] @http(path: "/posts/{{.value.id}}/comments")
}

type Comment {
  id: Int!
  name: String!
  email: String!
  body: String!
  title: String! @expr(body: "{{.value.email}}: {{.value.name}}")
}

type Photo {
  albumId: Int!
  id: Int!
  title: String!
  combinedId: String! @expr(body: "Album: {{.value.albumId}}, photo: {{.value.id}}")
}

type Album {
  userId: Int!
  id: Int!
  title: Int
  photos: [Photo] @http(path: "/albums/{{.value.id}}/photos?_limit=3")
}
